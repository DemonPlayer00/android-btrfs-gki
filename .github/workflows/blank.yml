name: Build BTRFS Module for GKI

on:
  workflow_dispatch:
    inputs:
      kernel_tag:
        description: 'Kernel tag to build (default: android12-5.10.168_r00)'
        required: false
        default: 'android12-5.10.168_r00'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32z1-dev libelf-dev liblz4-tool libncurses-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
          # 安装适用于Ubuntu 24.04的32位库支持
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y libncurses5:i386 libncurses6:i386

      - name: Download Android kernel source
        run: |
          KERNEL_TAG=${{ github.event.inputs.kernel_tag || 'android12-5.10.168_r00' }}
          mkdir -p kernel_source
          cd kernel_source
          git clone https://android.googlesource.com/kernel/common -b $KERNEL_TAG --depth 1

      - name: Set up environment variables
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          echo "CCACHE_DIR=$(pwd)/.ccache" >> $GITHUB_ENV
          echo "CCACHE_MAXSIZE=50G" >> $GITHUB_ENV

      - name: Configure ccache
        run: |
          ccache -M $CCACHE_MAXSIZE
          ccache -z

      - name: Download Clang toolchain
        run: |
          mkdir -p toolchain
          cd toolchain
          curl -L https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-r416183b.tar.gz | tar xz

      - name: Configure kernel
        run: |
          cd kernel_source/common
          export PATH=$(pwd)/../../toolchain/bin:$PATH
          make O=out ARCH=$ARCH CROSS_COMPILE=aarch64-linux-gnu- gki_defconfig

      - name: Build BTRFS module
        run: |
          cd kernel_source/common
          export PATH=$(pwd)/../../toolchain/bin:$PATH
          make -j$(nproc) O=out ARCH=$ARCH CROSS_COMPILE=aarch64-linux-gnu- CC=clang M=fs/btrfs modules

      - name: Collect build artifacts
        run: |
          mkdir -p artifacts
          cp kernel_source/common/out/fs/btrfs/btrfs.ko artifacts/
          cp kernel_source/common/out/.config artifacts/config

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: btrfs-module
          path: artifacts/
          retention-days: 7

      - name: Show ccache stats
        run: ccache -s    
